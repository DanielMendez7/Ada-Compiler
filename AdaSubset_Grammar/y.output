Terminals which are not used

   TICK


Grammar

    0 $accept: program $end

    1 program: main_body

    2 main_body: main_specification IS declarative_part main_begin sequence_of_statements exception_part END ';'

    3 main_begin: BEG

    4 main_specification: PROCEDURE ID

    5 procedure_body: procedure_body_prime IS declarative_part procedure_begin sequence_of_statements exception_part END ';'

    6 procedure_begin: BEG

    7 procedure_body_prime: procedure_specification formal_parameter_part

    8 procedure_specification: PROCEDURE ID

    9 formal_parameter_part: '(' parameters ')'
   10                      | /* empty */

   11 parameters: identifier_list ':' mode type_name ';' parameters
   12           | identifier_list ':' mode type_name

   13 mode: IN
   14     | OUT
   15     | IN OUT
   16     | /* empty */

   17 identifier_list: ID ',' identifier_list
   18                | ID

   19 type_name: ID

   20 declarative_part: objects ';' declarative_part
   21                 | types ';' declarative_part
   22                 | exceptions ';' declarative_part
   23                 | declarative_part_prime

   24 declarative_part_prime: procedure_body declarative_part_prime
   25                       | /* empty */

   26 types: TYPE ID IS ARRAY '(' constant DOTDOT constant ')' OF type_name
   27      | TYPE ID IS RECORD component_list ENDREC
   28      | TYPE ID IS RANGE constant DOTDOT constant

   29 component_list: record_object ';' component_list
   30               | record_object ';'

   31 record_object: identifier_list ':' type_name
   32              | NULLWORD

   33 objects: identifier_list ':' type_name
   34        | identifier_list ':' CONSTANT ASSIGN constant_expression

   35 constant: ID
   36         | NUMBER

   37 constant_expression: expression

   38 exceptions: identifier_list ':' EXCEPTION

   39 sequence_of_statements: statement_sequence_prime ';' sequence_of_statements
   40                       | /* empty */

   41 proc_read_write_arrays_assign: ID optional_parameters optional_assign

   42 optional_parameters: '(' expression_list ')'
   43                    | /* empty */
   44                    | nested_record

   45 nested_record: nested_record '.' ID
   46              | '.' ID
   47              | '.' ID '(' expression ')'

   48 optional_assign: ASSIGN expression
   49                | /* empty */

   50 statement_sequence_prime: NULLWORD
   51                         | proc_read_write_arrays_assign
   52                         | loop_part
   53                         | if_statement
   54                         | case_statement
   55                         | raise_statement

   56 raise_statement: RAISE ID
   57                | RAISE

   58 loop_part: loop_start loop_stmt_list ENDLOOP

   59 loop_start: LOOP

   60 loop_stmt_list: loop_stmt ';' loop_stmt_list
   61               | loop_stmt ';'

   62 loop_stmt: statement_sequence_prime
   63          | when_condition

   64 when_condition: EXITWHEN condition
   65               | EXIT

   66 case_statement: case_start case_expression IS case_list ENDCASE

   67 case_start: CASE

   68 case_expression: expression

   69 case_list: case_list case_handler
   70          | case_handler

   71 case_handler: when_start when_check sequence_of_statements

   72 when_start: WHEN

   73 when_check: when_expression_sequence ARROW

   74 when_expression_sequence: when_expression '|' when_expression_sequence
   75                         | when_expression

   76 when_expression: expression
   77                | OTHERS

   78 if_statement: if_start initial THEN sequence_of_statements optional_else_if optional_else ENDIF

   79 if_start: IF

   80 optional_else_if: else_if_section
   81                 | /* empty */

   82 else_if_section: else_if_stmt else_if_section
   83                | else_if_stmt

   84 else_if_stmt: else_if_start initial THEN sequence_of_statements

   85 else_if_start: ELSEIF

   86 optional_else: else_start sequence_of_statements
   87              | /* empty */

   88 else_start: ELSE

   89 initial: condition

   90 condition: expression

   91 expression_list: expression ',' expression_list
   92                | expression

   93 expression: relation
   94           | expression boolean_operation relation

   95 relation: simple_expression
   96         | relation relational_operation simple_expression

   97 simple_expression: term
   98                  | '-' term
   99                  | simple_expression adding_operation term

  100 term: factor
  101     | term multiplying_operation factor

  102 factor: primary
  103       | primary EXP primary
  104       | NOT primary

  105 primary: NUMBER
  106        | ID
  107        | '(' expression ')'
  108        | ID '(' expression ')'
  109        | primary '.' ID optional_array

  110 optional_array: '(' expression ')'
  111               | /* empty */

  112 boolean_operation: AND
  113                  | OR

  114 relational_operation: EQ
  115                     | NEQ
  116                     | LT
  117                     | GT
  118                     | GTE
  119                     | LTE

  120 adding_operation: '+'
  121                 | '-'

  122 multiplying_operation: '*'
  123                      | '/'

  124 exception_part: exception_start exceptionList
  125               | /* empty */

  126 exception_start: EXCEPTION

  127 exceptionList: exceptionList exceptHand
  128              | exceptHand

  129 exceptHand: WHEN choice_sequence ARROW sequence_of_statements

  130 choice_sequence: choice_sequence '|' ID
  131                | ID
  132                | OTHERS


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 26 42 47 107 108 110
')' (41) 9 26 42 47 107 108 110
'*' (42) 122
'+' (43) 120
',' (44) 17 91
'-' (45) 98 121
'.' (46) 45 46 47 109
'/' (47) 123
':' (58) 11 12 31 33 34 38
';' (59) 2 5 11 20 21 22 29 30 39 60 61
'|' (124) 74 130
error (256)
IS (258) 2 5 26 27 28 66
BEG (259) 3 6
END (260) 2 5
PROCEDURE (261) 4 8
ID (262) 4 8 17 18 19 26 27 28 35 41 45 46 47 56 106 108 109 130 131
NUMBER (263) 36 105
TYPE (264) 26 27 28
ARRAY (265) 26
RAISE (266) 56 57
OTHERS (267) 77 132
RECORD (268) 27
IN (269) 13 15
OUT (270) 14 15
RANGE (271) 28
CONSTANT (272) 34
ASSIGN (273) 34 48
EXCEPTION (274) 38 126
NULLWORD (275) 32 50
LOOP (276) 59
IF (277) 79
THEN (278) 78 84
ELSEIF (279) 85
ELSE (280) 88
EXIT (281) 65
WHEN (282) 72 129
AND (283) 112
OR (284) 113
EQ (285) 114
NEQ (286) 115
LT (287) 116
GT (288) 117
GTE (289) 118
LTE (290) 119
TICK (291)
NOT (292) 104
EXP (293) 103
ARROW (294) 73 129
OF (295) 26
DOTDOT (296) 26 28
ENDIF (297) 78
ENDREC (298) 27
ENDLOOP (299) 58
EXITWHEN (300) 64
CASE (301) 67
ENDCASE (302) 66


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1, on right: 0
main_body (61)
    on left: 2, on right: 1
main_begin (62)
    on left: 3, on right: 2
main_specification (63)
    on left: 4, on right: 2
procedure_body (64)
    on left: 5, on right: 24
procedure_begin (65)
    on left: 6, on right: 5
procedure_body_prime (66)
    on left: 7, on right: 5
procedure_specification (67)
    on left: 8, on right: 7
formal_parameter_part (68)
    on left: 9 10, on right: 7
parameters (69)
    on left: 11 12, on right: 9 11
mode (70)
    on left: 13 14 15 16, on right: 11 12
identifier_list (71)
    on left: 17 18, on right: 11 12 17 31 33 34 38
type_name (72)
    on left: 19, on right: 11 12 26 31 33
declarative_part (73)
    on left: 20 21 22 23, on right: 2 5 20 21 22
declarative_part_prime (74)
    on left: 24 25, on right: 23 24
types (75)
    on left: 26 27 28, on right: 21
component_list (76)
    on left: 29 30, on right: 27 29
record_object (77)
    on left: 31 32, on right: 29 30
objects (78)
    on left: 33 34, on right: 20
constant (79)
    on left: 35 36, on right: 26 28
constant_expression (80)
    on left: 37, on right: 34
exceptions (81)
    on left: 38, on right: 22
sequence_of_statements (82)
    on left: 39 40, on right: 2 5 39 71 78 84 86 129
proc_read_write_arrays_assign (83)
    on left: 41, on right: 51
optional_parameters (84)
    on left: 42 43 44, on right: 41
nested_record (85)
    on left: 45 46 47, on right: 44 45
optional_assign (86)
    on left: 48 49, on right: 41
statement_sequence_prime (87)
    on left: 50 51 52 53 54 55, on right: 39 62
raise_statement (88)
    on left: 56 57, on right: 55
loop_part (89)
    on left: 58, on right: 52
loop_start (90)
    on left: 59, on right: 58
loop_stmt_list (91)
    on left: 60 61, on right: 58 60
loop_stmt (92)
    on left: 62 63, on right: 60 61
when_condition (93)
    on left: 64 65, on right: 63
case_statement (94)
    on left: 66, on right: 54
case_start (95)
    on left: 67, on right: 66
case_expression (96)
    on left: 68, on right: 66
case_list (97)
    on left: 69 70, on right: 66 69
case_handler (98)
    on left: 71, on right: 69 70
when_start (99)
    on left: 72, on right: 71
when_check (100)
    on left: 73, on right: 71
when_expression_sequence (101)
    on left: 74 75, on right: 73 74
when_expression (102)
    on left: 76 77, on right: 74 75
if_statement (103)
    on left: 78, on right: 53
if_start (104)
    on left: 79, on right: 78
optional_else_if (105)
    on left: 80 81, on right: 78
else_if_section (106)
    on left: 82 83, on right: 80 82
else_if_stmt (107)
    on left: 84, on right: 82 83
else_if_start (108)
    on left: 85, on right: 84
optional_else (109)
    on left: 86 87, on right: 78
else_start (110)
    on left: 88, on right: 86
initial (111)
    on left: 89, on right: 78 84
condition (112)
    on left: 90, on right: 64 89
expression_list (113)
    on left: 91 92, on right: 42 91
expression (114)
    on left: 93 94, on right: 37 47 48 68 76 90 91 92 94 107 108 110
relation (115)
    on left: 95 96, on right: 93 94 96
simple_expression (116)
    on left: 97 98 99, on right: 95 96 99
term (117)
    on left: 100 101, on right: 97 98 99 101
factor (118)
    on left: 102 103 104, on right: 100 101
primary (119)
    on left: 105 106 107 108 109, on right: 102 103 104 109
optional_array (120)
    on left: 110 111, on right: 109
boolean_operation (121)
    on left: 112 113, on right: 94
relational_operation (122)
    on left: 114 115 116 117 118 119, on right: 96
adding_operation (123)
    on left: 120 121, on right: 99
multiplying_operation (124)
    on left: 122 123, on right: 101
exception_part (125)
    on left: 124 125, on right: 2 5
exception_start (126)
    on left: 126, on right: 124
exceptionList (127)
    on left: 127 128, on right: 124 127
exceptHand (128)
    on left: 129, on right: 127 128
choice_sequence (129)
    on left: 130 131 132, on right: 129 130


state 0

    0 $accept: . program $end

    PROCEDURE  shift, and go to state 1

    program             go to state 2
    main_body           go to state 3
    main_specification  go to state 4


state 1

    4 main_specification: PROCEDURE . ID

    ID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: main_body .

    $default  reduce using rule 1 (program)


state 4

    2 main_body: main_specification . IS declarative_part main_begin sequence_of_statements exception_part END ';'

    IS  shift, and go to state 7


state 5

    4 main_specification: PROCEDURE ID .

    $default  reduce using rule 4 (main_specification)


state 6

    0 $accept: program $end .

    $default  accept


state 7

    2 main_body: main_specification IS . declarative_part main_begin sequence_of_statements exception_part END ';'

    PROCEDURE  shift, and go to state 8
    ID         shift, and go to state 9
    TYPE       shift, and go to state 10

    $default  reduce using rule 25 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    identifier_list          go to state 14
    declarative_part         go to state 15
    declarative_part_prime   go to state 16
    types                    go to state 17
    objects                  go to state 18
    exceptions               go to state 19


state 8

    8 procedure_specification: PROCEDURE . ID

    ID  shift, and go to state 20


state 9

   17 identifier_list: ID . ',' identifier_list
   18                | ID .

    ','  shift, and go to state 21

    $default  reduce using rule 18 (identifier_list)


state 10

   26 types: TYPE . ID IS ARRAY '(' constant DOTDOT constant ')' OF type_name
   27      | TYPE . ID IS RECORD component_list ENDREC
   28      | TYPE . ID IS RANGE constant DOTDOT constant

    ID  shift, and go to state 22


state 11

   24 declarative_part_prime: procedure_body . declarative_part_prime

    PROCEDURE  shift, and go to state 8

    $default  reduce using rule 25 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    declarative_part_prime   go to state 23


state 12

    5 procedure_body: procedure_body_prime . IS declarative_part procedure_begin sequence_of_statements exception_part END ';'

    IS  shift, and go to state 24


state 13

    7 procedure_body_prime: procedure_specification . formal_parameter_part

    '('  shift, and go to state 25

    $default  reduce using rule 10 (formal_parameter_part)

    formal_parameter_part  go to state 26


state 14

   33 objects: identifier_list . ':' type_name
   34        | identifier_list . ':' CONSTANT ASSIGN constant_expression
   38 exceptions: identifier_list . ':' EXCEPTION

    ':'  shift, and go to state 27


state 15

    2 main_body: main_specification IS declarative_part . main_begin sequence_of_statements exception_part END ';'

    BEG  shift, and go to state 28

    main_begin  go to state 29


state 16

   23 declarative_part: declarative_part_prime .

    $default  reduce using rule 23 (declarative_part)


state 17

   21 declarative_part: types . ';' declarative_part

    ';'  shift, and go to state 30


state 18

   20 declarative_part: objects . ';' declarative_part

    ';'  shift, and go to state 31


state 19

   22 declarative_part: exceptions . ';' declarative_part

    ';'  shift, and go to state 32


state 20

    8 procedure_specification: PROCEDURE ID .

    $default  reduce using rule 8 (procedure_specification)


state 21

   17 identifier_list: ID ',' . identifier_list

    ID  shift, and go to state 9

    identifier_list  go to state 33


state 22

   26 types: TYPE ID . IS ARRAY '(' constant DOTDOT constant ')' OF type_name
   27      | TYPE ID . IS RECORD component_list ENDREC
   28      | TYPE ID . IS RANGE constant DOTDOT constant

    IS  shift, and go to state 34


state 23

   24 declarative_part_prime: procedure_body declarative_part_prime .

    $default  reduce using rule 24 (declarative_part_prime)


state 24

    5 procedure_body: procedure_body_prime IS . declarative_part procedure_begin sequence_of_statements exception_part END ';'

    PROCEDURE  shift, and go to state 8
    ID         shift, and go to state 9
    TYPE       shift, and go to state 10

    $default  reduce using rule 25 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    identifier_list          go to state 14
    declarative_part         go to state 35
    declarative_part_prime   go to state 16
    types                    go to state 17
    objects                  go to state 18
    exceptions               go to state 19


state 25

    9 formal_parameter_part: '(' . parameters ')'

    ID  shift, and go to state 9

    parameters       go to state 36
    identifier_list  go to state 37


state 26

    7 procedure_body_prime: procedure_specification formal_parameter_part .

    $default  reduce using rule 7 (procedure_body_prime)


state 27

   33 objects: identifier_list ':' . type_name
   34        | identifier_list ':' . CONSTANT ASSIGN constant_expression
   38 exceptions: identifier_list ':' . EXCEPTION

    ID         shift, and go to state 38
    CONSTANT   shift, and go to state 39
    EXCEPTION  shift, and go to state 40

    type_name  go to state 41


state 28

    3 main_begin: BEG .

    $default  reduce using rule 3 (main_begin)


state 29

    2 main_body: main_specification IS declarative_part main_begin . sequence_of_statements exception_part END ';'

    ID        shift, and go to state 42
    RAISE     shift, and go to state 43
    NULLWORD  shift, and go to state 44
    LOOP      shift, and go to state 45
    IF        shift, and go to state 46
    CASE      shift, and go to state 47

    $default  reduce using rule 40 (sequence_of_statements)

    sequence_of_statements         go to state 48
    proc_read_write_arrays_assign  go to state 49
    statement_sequence_prime       go to state 50
    raise_statement                go to state 51
    loop_part                      go to state 52
    loop_start                     go to state 53
    case_statement                 go to state 54
    case_start                     go to state 55
    if_statement                   go to state 56
    if_start                       go to state 57


state 30

   21 declarative_part: types ';' . declarative_part

    PROCEDURE  shift, and go to state 8
    ID         shift, and go to state 9
    TYPE       shift, and go to state 10

    $default  reduce using rule 25 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    identifier_list          go to state 14
    declarative_part         go to state 58
    declarative_part_prime   go to state 16
    types                    go to state 17
    objects                  go to state 18
    exceptions               go to state 19


state 31

   20 declarative_part: objects ';' . declarative_part

    PROCEDURE  shift, and go to state 8
    ID         shift, and go to state 9
    TYPE       shift, and go to state 10

    $default  reduce using rule 25 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    identifier_list          go to state 14
    declarative_part         go to state 59
    declarative_part_prime   go to state 16
    types                    go to state 17
    objects                  go to state 18
    exceptions               go to state 19


state 32

   22 declarative_part: exceptions ';' . declarative_part

    PROCEDURE  shift, and go to state 8
    ID         shift, and go to state 9
    TYPE       shift, and go to state 10

    $default  reduce using rule 25 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    identifier_list          go to state 14
    declarative_part         go to state 60
    declarative_part_prime   go to state 16
    types                    go to state 17
    objects                  go to state 18
    exceptions               go to state 19


state 33

   17 identifier_list: ID ',' identifier_list .

    $default  reduce using rule 17 (identifier_list)


state 34

   26 types: TYPE ID IS . ARRAY '(' constant DOTDOT constant ')' OF type_name
   27      | TYPE ID IS . RECORD component_list ENDREC
   28      | TYPE ID IS . RANGE constant DOTDOT constant

    ARRAY   shift, and go to state 61
    RECORD  shift, and go to state 62
    RANGE   shift, and go to state 63


state 35

    5 procedure_body: procedure_body_prime IS declarative_part . procedure_begin sequence_of_statements exception_part END ';'

    BEG  shift, and go to state 64

    procedure_begin  go to state 65


state 36

    9 formal_parameter_part: '(' parameters . ')'

    ')'  shift, and go to state 66


state 37

   11 parameters: identifier_list . ':' mode type_name ';' parameters
   12           | identifier_list . ':' mode type_name

    ':'  shift, and go to state 67


state 38

   19 type_name: ID .

    $default  reduce using rule 19 (type_name)


state 39

   34 objects: identifier_list ':' CONSTANT . ASSIGN constant_expression

    ASSIGN  shift, and go to state 68


state 40

   38 exceptions: identifier_list ':' EXCEPTION .

    $default  reduce using rule 38 (exceptions)


state 41

   33 objects: identifier_list ':' type_name .

    $default  reduce using rule 33 (objects)


state 42

   41 proc_read_write_arrays_assign: ID . optional_parameters optional_assign

    '('  shift, and go to state 69
    '.'  shift, and go to state 70

    $default  reduce using rule 43 (optional_parameters)

    optional_parameters  go to state 71
    nested_record        go to state 72


state 43

   56 raise_statement: RAISE . ID
   57                | RAISE .

    ID  shift, and go to state 73

    $default  reduce using rule 57 (raise_statement)


state 44

   50 statement_sequence_prime: NULLWORD .

    $default  reduce using rule 50 (statement_sequence_prime)


state 45

   59 loop_start: LOOP .

    $default  reduce using rule 59 (loop_start)


state 46

   79 if_start: IF .

    $default  reduce using rule 79 (if_start)


state 47

   67 case_start: CASE .

    $default  reduce using rule 67 (case_start)


state 48

    2 main_body: main_specification IS declarative_part main_begin sequence_of_statements . exception_part END ';'

    EXCEPTION  shift, and go to state 74

    $default  reduce using rule 125 (exception_part)

    exception_part   go to state 75
    exception_start  go to state 76


state 49

   51 statement_sequence_prime: proc_read_write_arrays_assign .

    $default  reduce using rule 51 (statement_sequence_prime)


state 50

   39 sequence_of_statements: statement_sequence_prime . ';' sequence_of_statements

    ';'  shift, and go to state 77


state 51

   55 statement_sequence_prime: raise_statement .

    $default  reduce using rule 55 (statement_sequence_prime)


state 52

   52 statement_sequence_prime: loop_part .

    $default  reduce using rule 52 (statement_sequence_prime)


state 53

   58 loop_part: loop_start . loop_stmt_list ENDLOOP

    ID        shift, and go to state 42
    RAISE     shift, and go to state 43
    NULLWORD  shift, and go to state 44
    LOOP      shift, and go to state 45
    IF        shift, and go to state 46
    EXIT      shift, and go to state 78
    EXITWHEN  shift, and go to state 79
    CASE      shift, and go to state 47

    proc_read_write_arrays_assign  go to state 49
    statement_sequence_prime       go to state 80
    raise_statement                go to state 51
    loop_part                      go to state 52
    loop_start                     go to state 53
    loop_stmt_list                 go to state 81
    loop_stmt                      go to state 82
    when_condition                 go to state 83
    case_statement                 go to state 54
    case_start                     go to state 55
    if_statement                   go to state 56
    if_start                       go to state 57


state 54

   54 statement_sequence_prime: case_statement .

    $default  reduce using rule 54 (statement_sequence_prime)


state 55

   66 case_statement: case_start . case_expression IS case_list ENDCASE

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    case_expression    go to state 89
    expression         go to state 90
    relation           go to state 91
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 56

   53 statement_sequence_prime: if_statement .

    $default  reduce using rule 53 (statement_sequence_prime)


state 57

   78 if_statement: if_start . initial THEN sequence_of_statements optional_else_if optional_else ENDIF

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    initial            go to state 96
    condition          go to state 97
    expression         go to state 98
    relation           go to state 91
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 58

   21 declarative_part: types ';' declarative_part .

    $default  reduce using rule 21 (declarative_part)


state 59

   20 declarative_part: objects ';' declarative_part .

    $default  reduce using rule 20 (declarative_part)


state 60

   22 declarative_part: exceptions ';' declarative_part .

    $default  reduce using rule 22 (declarative_part)


state 61

   26 types: TYPE ID IS ARRAY . '(' constant DOTDOT constant ')' OF type_name

    '('  shift, and go to state 99


state 62

   27 types: TYPE ID IS RECORD . component_list ENDREC

    ID        shift, and go to state 9
    NULLWORD  shift, and go to state 100

    identifier_list  go to state 101
    component_list   go to state 102
    record_object    go to state 103


state 63

   28 types: TYPE ID IS RANGE . constant DOTDOT constant

    ID      shift, and go to state 104
    NUMBER  shift, and go to state 105

    constant  go to state 106


state 64

    6 procedure_begin: BEG .

    $default  reduce using rule 6 (procedure_begin)


state 65

    5 procedure_body: procedure_body_prime IS declarative_part procedure_begin . sequence_of_statements exception_part END ';'

    ID        shift, and go to state 42
    RAISE     shift, and go to state 43
    NULLWORD  shift, and go to state 44
    LOOP      shift, and go to state 45
    IF        shift, and go to state 46
    CASE      shift, and go to state 47

    $default  reduce using rule 40 (sequence_of_statements)

    sequence_of_statements         go to state 107
    proc_read_write_arrays_assign  go to state 49
    statement_sequence_prime       go to state 50
    raise_statement                go to state 51
    loop_part                      go to state 52
    loop_start                     go to state 53
    case_statement                 go to state 54
    case_start                     go to state 55
    if_statement                   go to state 56
    if_start                       go to state 57


state 66

    9 formal_parameter_part: '(' parameters ')' .

    $default  reduce using rule 9 (formal_parameter_part)


state 67

   11 parameters: identifier_list ':' . mode type_name ';' parameters
   12           | identifier_list ':' . mode type_name

    IN   shift, and go to state 108
    OUT  shift, and go to state 109

    $default  reduce using rule 16 (mode)

    mode  go to state 110


state 68

   34 objects: identifier_list ':' CONSTANT ASSIGN . constant_expression

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    constant_expression  go to state 111
    expression           go to state 112
    relation             go to state 91
    simple_expression    go to state 92
    term                 go to state 93
    factor               go to state 94
    primary              go to state 95


state 69

   42 optional_parameters: '(' . expression_list ')'

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    expression_list    go to state 113
    expression         go to state 114
    relation           go to state 91
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 70

   46 nested_record: '.' . ID
   47              | '.' . ID '(' expression ')'

    ID  shift, and go to state 115


state 71

   41 proc_read_write_arrays_assign: ID optional_parameters . optional_assign

    ASSIGN  shift, and go to state 116

    $default  reduce using rule 49 (optional_assign)

    optional_assign  go to state 117


state 72

   44 optional_parameters: nested_record .
   45 nested_record: nested_record . '.' ID

    '.'  shift, and go to state 118

    $default  reduce using rule 44 (optional_parameters)


state 73

   56 raise_statement: RAISE ID .

    $default  reduce using rule 56 (raise_statement)


state 74

  126 exception_start: EXCEPTION .

    $default  reduce using rule 126 (exception_start)


state 75

    2 main_body: main_specification IS declarative_part main_begin sequence_of_statements exception_part . END ';'

    END  shift, and go to state 119


state 76

  124 exception_part: exception_start . exceptionList

    WHEN  shift, and go to state 120

    exceptionList  go to state 121
    exceptHand     go to state 122


state 77

   39 sequence_of_statements: statement_sequence_prime ';' . sequence_of_statements

    ID        shift, and go to state 42
    RAISE     shift, and go to state 43
    NULLWORD  shift, and go to state 44
    LOOP      shift, and go to state 45
    IF        shift, and go to state 46
    CASE      shift, and go to state 47

    $default  reduce using rule 40 (sequence_of_statements)

    sequence_of_statements         go to state 123
    proc_read_write_arrays_assign  go to state 49
    statement_sequence_prime       go to state 50
    raise_statement                go to state 51
    loop_part                      go to state 52
    loop_start                     go to state 53
    case_statement                 go to state 54
    case_start                     go to state 55
    if_statement                   go to state 56
    if_start                       go to state 57


state 78

   65 when_condition: EXIT .

    $default  reduce using rule 65 (when_condition)


state 79

   64 when_condition: EXITWHEN . condition

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    condition          go to state 124
    expression         go to state 98
    relation           go to state 91
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 80

   62 loop_stmt: statement_sequence_prime .

    $default  reduce using rule 62 (loop_stmt)


state 81

   58 loop_part: loop_start loop_stmt_list . ENDLOOP

    ENDLOOP  shift, and go to state 125


state 82

   60 loop_stmt_list: loop_stmt . ';' loop_stmt_list
   61               | loop_stmt . ';'

    ';'  shift, and go to state 126


state 83

   63 loop_stmt: when_condition .

    $default  reduce using rule 63 (loop_stmt)


state 84

  106 primary: ID .
  108        | ID . '(' expression ')'

    '('  shift, and go to state 127

    $default  reduce using rule 106 (primary)


state 85

  105 primary: NUMBER .

    $default  reduce using rule 105 (primary)


state 86

  104 factor: NOT . primary

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    '('     shift, and go to state 87

    primary  go to state 128


state 87

  107 primary: '(' . expression ')'

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    expression         go to state 129
    relation           go to state 91
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 88

   98 simple_expression: '-' . term

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87

    term     go to state 130
    factor   go to state 94
    primary  go to state 95


state 89

   66 case_statement: case_start case_expression . IS case_list ENDCASE

    IS  shift, and go to state 131


state 90

   68 case_expression: expression .
   94 expression: expression . boolean_operation relation

    AND  shift, and go to state 132
    OR   shift, and go to state 133

    $default  reduce using rule 68 (case_expression)

    boolean_operation  go to state 134


state 91

   93 expression: relation .
   96 relation: relation . relational_operation simple_expression

    EQ   shift, and go to state 135
    NEQ  shift, and go to state 136
    LT   shift, and go to state 137
    GT   shift, and go to state 138
    GTE  shift, and go to state 139
    LTE  shift, and go to state 140

    $default  reduce using rule 93 (expression)

    relational_operation  go to state 141


state 92

   95 relation: simple_expression .
   99 simple_expression: simple_expression . adding_operation term

    '-'  shift, and go to state 142
    '+'  shift, and go to state 143

    $default  reduce using rule 95 (relation)

    adding_operation  go to state 144


state 93

   97 simple_expression: term .
  101 term: term . multiplying_operation factor

    '*'  shift, and go to state 145
    '/'  shift, and go to state 146

    $default  reduce using rule 97 (simple_expression)

    multiplying_operation  go to state 147


state 94

  100 term: factor .

    $default  reduce using rule 100 (term)


state 95

  102 factor: primary .
  103       | primary . EXP primary
  109 primary: primary . '.' ID optional_array

    EXP  shift, and go to state 148
    '.'  shift, and go to state 149

    $default  reduce using rule 102 (factor)


state 96

   78 if_statement: if_start initial . THEN sequence_of_statements optional_else_if optional_else ENDIF

    THEN  shift, and go to state 150


state 97

   89 initial: condition .

    $default  reduce using rule 89 (initial)


state 98

   90 condition: expression .
   94 expression: expression . boolean_operation relation

    AND  shift, and go to state 132
    OR   shift, and go to state 133

    $default  reduce using rule 90 (condition)

    boolean_operation  go to state 134


state 99

   26 types: TYPE ID IS ARRAY '(' . constant DOTDOT constant ')' OF type_name

    ID      shift, and go to state 104
    NUMBER  shift, and go to state 105

    constant  go to state 151


state 100

   32 record_object: NULLWORD .

    $default  reduce using rule 32 (record_object)


state 101

   31 record_object: identifier_list . ':' type_name

    ':'  shift, and go to state 152


state 102

   27 types: TYPE ID IS RECORD component_list . ENDREC

    ENDREC  shift, and go to state 153


state 103

   29 component_list: record_object . ';' component_list
   30               | record_object . ';'

    ';'  shift, and go to state 154


state 104

   35 constant: ID .

    $default  reduce using rule 35 (constant)


state 105

   36 constant: NUMBER .

    $default  reduce using rule 36 (constant)


state 106

   28 types: TYPE ID IS RANGE constant . DOTDOT constant

    DOTDOT  shift, and go to state 155


state 107

    5 procedure_body: procedure_body_prime IS declarative_part procedure_begin sequence_of_statements . exception_part END ';'

    EXCEPTION  shift, and go to state 74

    $default  reduce using rule 125 (exception_part)

    exception_part   go to state 156
    exception_start  go to state 76


state 108

   13 mode: IN .
   15     | IN . OUT

    OUT  shift, and go to state 157

    $default  reduce using rule 13 (mode)


state 109

   14 mode: OUT .

    $default  reduce using rule 14 (mode)


state 110

   11 parameters: identifier_list ':' mode . type_name ';' parameters
   12           | identifier_list ':' mode . type_name

    ID  shift, and go to state 38

    type_name  go to state 158


state 111

   34 objects: identifier_list ':' CONSTANT ASSIGN constant_expression .

    $default  reduce using rule 34 (objects)


state 112

   37 constant_expression: expression .
   94 expression: expression . boolean_operation relation

    AND  shift, and go to state 132
    OR   shift, and go to state 133

    $default  reduce using rule 37 (constant_expression)

    boolean_operation  go to state 134


state 113

   42 optional_parameters: '(' expression_list . ')'

    ')'  shift, and go to state 159


state 114

   91 expression_list: expression . ',' expression_list
   92                | expression .
   94 expression: expression . boolean_operation relation

    AND  shift, and go to state 132
    OR   shift, and go to state 133
    ','  shift, and go to state 160

    $default  reduce using rule 92 (expression_list)

    boolean_operation  go to state 134


state 115

   46 nested_record: '.' ID .
   47              | '.' ID . '(' expression ')'

    '('  shift, and go to state 161

    $default  reduce using rule 46 (nested_record)


state 116

   48 optional_assign: ASSIGN . expression

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    expression         go to state 162
    relation           go to state 91
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 117

   41 proc_read_write_arrays_assign: ID optional_parameters optional_assign .

    $default  reduce using rule 41 (proc_read_write_arrays_assign)


state 118

   45 nested_record: nested_record '.' . ID

    ID  shift, and go to state 163


state 119

    2 main_body: main_specification IS declarative_part main_begin sequence_of_statements exception_part END . ';'

    ';'  shift, and go to state 164


state 120

  129 exceptHand: WHEN . choice_sequence ARROW sequence_of_statements

    ID      shift, and go to state 165
    OTHERS  shift, and go to state 166

    choice_sequence  go to state 167


state 121

  124 exception_part: exception_start exceptionList .
  127 exceptionList: exceptionList . exceptHand

    WHEN  shift, and go to state 120

    $default  reduce using rule 124 (exception_part)

    exceptHand  go to state 168


state 122

  128 exceptionList: exceptHand .

    $default  reduce using rule 128 (exceptionList)


state 123

   39 sequence_of_statements: statement_sequence_prime ';' sequence_of_statements .

    $default  reduce using rule 39 (sequence_of_statements)


state 124

   64 when_condition: EXITWHEN condition .

    $default  reduce using rule 64 (when_condition)


state 125

   58 loop_part: loop_start loop_stmt_list ENDLOOP .

    $default  reduce using rule 58 (loop_part)


state 126

   60 loop_stmt_list: loop_stmt ';' . loop_stmt_list
   61               | loop_stmt ';' .

    ID        shift, and go to state 42
    RAISE     shift, and go to state 43
    NULLWORD  shift, and go to state 44
    LOOP      shift, and go to state 45
    IF        shift, and go to state 46
    EXIT      shift, and go to state 78
    EXITWHEN  shift, and go to state 79
    CASE      shift, and go to state 47

    $default  reduce using rule 61 (loop_stmt_list)

    proc_read_write_arrays_assign  go to state 49
    statement_sequence_prime       go to state 80
    raise_statement                go to state 51
    loop_part                      go to state 52
    loop_start                     go to state 53
    loop_stmt_list                 go to state 169
    loop_stmt                      go to state 82
    when_condition                 go to state 83
    case_statement                 go to state 54
    case_start                     go to state 55
    if_statement                   go to state 56
    if_start                       go to state 57


state 127

  108 primary: ID '(' . expression ')'

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    expression         go to state 170
    relation           go to state 91
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 128

  104 factor: NOT primary .
  109 primary: primary . '.' ID optional_array

    '.'  shift, and go to state 149

    $default  reduce using rule 104 (factor)


state 129

   94 expression: expression . boolean_operation relation
  107 primary: '(' expression . ')'

    AND  shift, and go to state 132
    OR   shift, and go to state 133
    ')'  shift, and go to state 171

    boolean_operation  go to state 134


state 130

   98 simple_expression: '-' term .
  101 term: term . multiplying_operation factor

    '*'  shift, and go to state 145
    '/'  shift, and go to state 146

    $default  reduce using rule 98 (simple_expression)

    multiplying_operation  go to state 147


state 131

   66 case_statement: case_start case_expression IS . case_list ENDCASE

    WHEN  shift, and go to state 172

    case_list     go to state 173
    case_handler  go to state 174
    when_start    go to state 175


state 132

  112 boolean_operation: AND .

    $default  reduce using rule 112 (boolean_operation)


state 133

  113 boolean_operation: OR .

    $default  reduce using rule 113 (boolean_operation)


state 134

   94 expression: expression boolean_operation . relation

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    relation           go to state 176
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 135

  114 relational_operation: EQ .

    $default  reduce using rule 114 (relational_operation)


state 136

  115 relational_operation: NEQ .

    $default  reduce using rule 115 (relational_operation)


state 137

  116 relational_operation: LT .

    $default  reduce using rule 116 (relational_operation)


state 138

  117 relational_operation: GT .

    $default  reduce using rule 117 (relational_operation)


state 139

  118 relational_operation: GTE .

    $default  reduce using rule 118 (relational_operation)


state 140

  119 relational_operation: LTE .

    $default  reduce using rule 119 (relational_operation)


state 141

   96 relation: relation relational_operation . simple_expression

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    simple_expression  go to state 177
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 142

  121 adding_operation: '-' .

    $default  reduce using rule 121 (adding_operation)


state 143

  120 adding_operation: '+' .

    $default  reduce using rule 120 (adding_operation)


state 144

   99 simple_expression: simple_expression adding_operation . term

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87

    term     go to state 178
    factor   go to state 94
    primary  go to state 95


state 145

  122 multiplying_operation: '*' .

    $default  reduce using rule 122 (multiplying_operation)


state 146

  123 multiplying_operation: '/' .

    $default  reduce using rule 123 (multiplying_operation)


state 147

  101 term: term multiplying_operation . factor

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87

    factor   go to state 179
    primary  go to state 95


state 148

  103 factor: primary EXP . primary

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    '('     shift, and go to state 87

    primary  go to state 180


state 149

  109 primary: primary '.' . ID optional_array

    ID  shift, and go to state 181


state 150

   78 if_statement: if_start initial THEN . sequence_of_statements optional_else_if optional_else ENDIF

    ID        shift, and go to state 42
    RAISE     shift, and go to state 43
    NULLWORD  shift, and go to state 44
    LOOP      shift, and go to state 45
    IF        shift, and go to state 46
    CASE      shift, and go to state 47

    $default  reduce using rule 40 (sequence_of_statements)

    sequence_of_statements         go to state 182
    proc_read_write_arrays_assign  go to state 49
    statement_sequence_prime       go to state 50
    raise_statement                go to state 51
    loop_part                      go to state 52
    loop_start                     go to state 53
    case_statement                 go to state 54
    case_start                     go to state 55
    if_statement                   go to state 56
    if_start                       go to state 57


state 151

   26 types: TYPE ID IS ARRAY '(' constant . DOTDOT constant ')' OF type_name

    DOTDOT  shift, and go to state 183


state 152

   31 record_object: identifier_list ':' . type_name

    ID  shift, and go to state 38

    type_name  go to state 184


state 153

   27 types: TYPE ID IS RECORD component_list ENDREC .

    $default  reduce using rule 27 (types)


state 154

   29 component_list: record_object ';' . component_list
   30               | record_object ';' .

    ID        shift, and go to state 9
    NULLWORD  shift, and go to state 100

    $default  reduce using rule 30 (component_list)

    identifier_list  go to state 101
    component_list   go to state 185
    record_object    go to state 103


state 155

   28 types: TYPE ID IS RANGE constant DOTDOT . constant

    ID      shift, and go to state 104
    NUMBER  shift, and go to state 105

    constant  go to state 186


state 156

    5 procedure_body: procedure_body_prime IS declarative_part procedure_begin sequence_of_statements exception_part . END ';'

    END  shift, and go to state 187


state 157

   15 mode: IN OUT .

    $default  reduce using rule 15 (mode)


state 158

   11 parameters: identifier_list ':' mode type_name . ';' parameters
   12           | identifier_list ':' mode type_name .

    ';'  shift, and go to state 188

    $default  reduce using rule 12 (parameters)


state 159

   42 optional_parameters: '(' expression_list ')' .

    $default  reduce using rule 42 (optional_parameters)


state 160

   91 expression_list: expression ',' . expression_list

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    expression_list    go to state 189
    expression         go to state 114
    relation           go to state 91
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 161

   47 nested_record: '.' ID '(' . expression ')'

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    expression         go to state 190
    relation           go to state 91
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 162

   48 optional_assign: ASSIGN expression .
   94 expression: expression . boolean_operation relation

    AND  shift, and go to state 132
    OR   shift, and go to state 133

    $default  reduce using rule 48 (optional_assign)

    boolean_operation  go to state 134


state 163

   45 nested_record: nested_record '.' ID .

    $default  reduce using rule 45 (nested_record)


state 164

    2 main_body: main_specification IS declarative_part main_begin sequence_of_statements exception_part END ';' .

    $default  reduce using rule 2 (main_body)


state 165

  131 choice_sequence: ID .

    $default  reduce using rule 131 (choice_sequence)


state 166

  132 choice_sequence: OTHERS .

    $default  reduce using rule 132 (choice_sequence)


state 167

  129 exceptHand: WHEN choice_sequence . ARROW sequence_of_statements
  130 choice_sequence: choice_sequence . '|' ID

    ARROW  shift, and go to state 191
    '|'    shift, and go to state 192


state 168

  127 exceptionList: exceptionList exceptHand .

    $default  reduce using rule 127 (exceptionList)


state 169

   60 loop_stmt_list: loop_stmt ';' loop_stmt_list .

    $default  reduce using rule 60 (loop_stmt_list)


state 170

   94 expression: expression . boolean_operation relation
  108 primary: ID '(' expression . ')'

    AND  shift, and go to state 132
    OR   shift, and go to state 133
    ')'  shift, and go to state 193

    boolean_operation  go to state 134


state 171

  107 primary: '(' expression ')' .

    $default  reduce using rule 107 (primary)


state 172

   72 when_start: WHEN .

    $default  reduce using rule 72 (when_start)


state 173

   66 case_statement: case_start case_expression IS case_list . ENDCASE
   69 case_list: case_list . case_handler

    WHEN     shift, and go to state 172
    ENDCASE  shift, and go to state 194

    case_handler  go to state 195
    when_start    go to state 175


state 174

   70 case_list: case_handler .

    $default  reduce using rule 70 (case_list)


state 175

   71 case_handler: when_start . when_check sequence_of_statements

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    OTHERS  shift, and go to state 196
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    when_check                go to state 197
    when_expression_sequence  go to state 198
    when_expression           go to state 199
    expression                go to state 200
    relation                  go to state 91
    simple_expression         go to state 92
    term                      go to state 93
    factor                    go to state 94
    primary                   go to state 95


state 176

   94 expression: expression boolean_operation relation .
   96 relation: relation . relational_operation simple_expression

    EQ   shift, and go to state 135
    NEQ  shift, and go to state 136
    LT   shift, and go to state 137
    GT   shift, and go to state 138
    GTE  shift, and go to state 139
    LTE  shift, and go to state 140

    $default  reduce using rule 94 (expression)

    relational_operation  go to state 141


state 177

   96 relation: relation relational_operation simple_expression .
   99 simple_expression: simple_expression . adding_operation term

    '-'  shift, and go to state 142
    '+'  shift, and go to state 143

    $default  reduce using rule 96 (relation)

    adding_operation  go to state 144


state 178

   99 simple_expression: simple_expression adding_operation term .
  101 term: term . multiplying_operation factor

    '*'  shift, and go to state 145
    '/'  shift, and go to state 146

    $default  reduce using rule 99 (simple_expression)

    multiplying_operation  go to state 147


state 179

  101 term: term multiplying_operation factor .

    $default  reduce using rule 101 (term)


state 180

  103 factor: primary EXP primary .
  109 primary: primary . '.' ID optional_array

    '.'  shift, and go to state 149

    $default  reduce using rule 103 (factor)


state 181

  109 primary: primary '.' ID . optional_array

    '('  shift, and go to state 201

    $default  reduce using rule 111 (optional_array)

    optional_array  go to state 202


state 182

   78 if_statement: if_start initial THEN sequence_of_statements . optional_else_if optional_else ENDIF

    ELSEIF  shift, and go to state 203

    $default  reduce using rule 81 (optional_else_if)

    optional_else_if  go to state 204
    else_if_section   go to state 205
    else_if_stmt      go to state 206
    else_if_start     go to state 207


state 183

   26 types: TYPE ID IS ARRAY '(' constant DOTDOT . constant ')' OF type_name

    ID      shift, and go to state 104
    NUMBER  shift, and go to state 105

    constant  go to state 208


state 184

   31 record_object: identifier_list ':' type_name .

    $default  reduce using rule 31 (record_object)


state 185

   29 component_list: record_object ';' component_list .

    $default  reduce using rule 29 (component_list)


state 186

   28 types: TYPE ID IS RANGE constant DOTDOT constant .

    $default  reduce using rule 28 (types)


state 187

    5 procedure_body: procedure_body_prime IS declarative_part procedure_begin sequence_of_statements exception_part END . ';'

    ';'  shift, and go to state 209


state 188

   11 parameters: identifier_list ':' mode type_name ';' . parameters

    ID  shift, and go to state 9

    parameters       go to state 210
    identifier_list  go to state 37


state 189

   91 expression_list: expression ',' expression_list .

    $default  reduce using rule 91 (expression_list)


state 190

   47 nested_record: '.' ID '(' expression . ')'
   94 expression: expression . boolean_operation relation

    AND  shift, and go to state 132
    OR   shift, and go to state 133
    ')'  shift, and go to state 211

    boolean_operation  go to state 134


state 191

  129 exceptHand: WHEN choice_sequence ARROW . sequence_of_statements

    ID        shift, and go to state 42
    RAISE     shift, and go to state 43
    NULLWORD  shift, and go to state 44
    LOOP      shift, and go to state 45
    IF        shift, and go to state 46
    CASE      shift, and go to state 47

    $default  reduce using rule 40 (sequence_of_statements)

    sequence_of_statements         go to state 212
    proc_read_write_arrays_assign  go to state 49
    statement_sequence_prime       go to state 50
    raise_statement                go to state 51
    loop_part                      go to state 52
    loop_start                     go to state 53
    case_statement                 go to state 54
    case_start                     go to state 55
    if_statement                   go to state 56
    if_start                       go to state 57


state 192

  130 choice_sequence: choice_sequence '|' . ID

    ID  shift, and go to state 213


state 193

  108 primary: ID '(' expression ')' .

    $default  reduce using rule 108 (primary)


state 194

   66 case_statement: case_start case_expression IS case_list ENDCASE .

    $default  reduce using rule 66 (case_statement)


state 195

   69 case_list: case_list case_handler .

    $default  reduce using rule 69 (case_list)


state 196

   77 when_expression: OTHERS .

    $default  reduce using rule 77 (when_expression)


state 197

   71 case_handler: when_start when_check . sequence_of_statements

    ID        shift, and go to state 42
    RAISE     shift, and go to state 43
    NULLWORD  shift, and go to state 44
    LOOP      shift, and go to state 45
    IF        shift, and go to state 46
    CASE      shift, and go to state 47

    $default  reduce using rule 40 (sequence_of_statements)

    sequence_of_statements         go to state 214
    proc_read_write_arrays_assign  go to state 49
    statement_sequence_prime       go to state 50
    raise_statement                go to state 51
    loop_part                      go to state 52
    loop_start                     go to state 53
    case_statement                 go to state 54
    case_start                     go to state 55
    if_statement                   go to state 56
    if_start                       go to state 57


state 198

   73 when_check: when_expression_sequence . ARROW

    ARROW  shift, and go to state 215


state 199

   74 when_expression_sequence: when_expression . '|' when_expression_sequence
   75                         | when_expression .

    '|'  shift, and go to state 216

    $default  reduce using rule 75 (when_expression_sequence)


state 200

   76 when_expression: expression .
   94 expression: expression . boolean_operation relation

    AND  shift, and go to state 132
    OR   shift, and go to state 133

    $default  reduce using rule 76 (when_expression)

    boolean_operation  go to state 134


state 201

  110 optional_array: '(' . expression ')'

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    expression         go to state 217
    relation           go to state 91
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 202

  109 primary: primary '.' ID optional_array .

    $default  reduce using rule 109 (primary)


state 203

   85 else_if_start: ELSEIF .

    $default  reduce using rule 85 (else_if_start)


state 204

   78 if_statement: if_start initial THEN sequence_of_statements optional_else_if . optional_else ENDIF

    ELSE  shift, and go to state 218

    $default  reduce using rule 87 (optional_else)

    optional_else  go to state 219
    else_start     go to state 220


state 205

   80 optional_else_if: else_if_section .

    $default  reduce using rule 80 (optional_else_if)


state 206

   82 else_if_section: else_if_stmt . else_if_section
   83                | else_if_stmt .

    ELSEIF  shift, and go to state 203

    $default  reduce using rule 83 (else_if_section)

    else_if_section  go to state 221
    else_if_stmt     go to state 206
    else_if_start    go to state 207


state 207

   84 else_if_stmt: else_if_start . initial THEN sequence_of_statements

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    initial            go to state 222
    condition          go to state 97
    expression         go to state 98
    relation           go to state 91
    simple_expression  go to state 92
    term               go to state 93
    factor             go to state 94
    primary            go to state 95


state 208

   26 types: TYPE ID IS ARRAY '(' constant DOTDOT constant . ')' OF type_name

    ')'  shift, and go to state 223


state 209

    5 procedure_body: procedure_body_prime IS declarative_part procedure_begin sequence_of_statements exception_part END ';' .

    $default  reduce using rule 5 (procedure_body)


state 210

   11 parameters: identifier_list ':' mode type_name ';' parameters .

    $default  reduce using rule 11 (parameters)


state 211

   47 nested_record: '.' ID '(' expression ')' .

    $default  reduce using rule 47 (nested_record)


state 212

  129 exceptHand: WHEN choice_sequence ARROW sequence_of_statements .

    $default  reduce using rule 129 (exceptHand)


state 213

  130 choice_sequence: choice_sequence '|' ID .

    $default  reduce using rule 130 (choice_sequence)


state 214

   71 case_handler: when_start when_check sequence_of_statements .

    $default  reduce using rule 71 (case_handler)


state 215

   73 when_check: when_expression_sequence ARROW .

    $default  reduce using rule 73 (when_check)


state 216

   74 when_expression_sequence: when_expression '|' . when_expression_sequence

    ID      shift, and go to state 84
    NUMBER  shift, and go to state 85
    OTHERS  shift, and go to state 196
    NOT     shift, and go to state 86
    '('     shift, and go to state 87
    '-'     shift, and go to state 88

    when_expression_sequence  go to state 224
    when_expression           go to state 199
    expression                go to state 200
    relation                  go to state 91
    simple_expression         go to state 92
    term                      go to state 93
    factor                    go to state 94
    primary                   go to state 95


state 217

   94 expression: expression . boolean_operation relation
  110 optional_array: '(' expression . ')'

    AND  shift, and go to state 132
    OR   shift, and go to state 133
    ')'  shift, and go to state 225

    boolean_operation  go to state 134


state 218

   88 else_start: ELSE .

    $default  reduce using rule 88 (else_start)


state 219

   78 if_statement: if_start initial THEN sequence_of_statements optional_else_if optional_else . ENDIF

    ENDIF  shift, and go to state 226


state 220

   86 optional_else: else_start . sequence_of_statements

    ID        shift, and go to state 42
    RAISE     shift, and go to state 43
    NULLWORD  shift, and go to state 44
    LOOP      shift, and go to state 45
    IF        shift, and go to state 46
    CASE      shift, and go to state 47

    $default  reduce using rule 40 (sequence_of_statements)

    sequence_of_statements         go to state 227
    proc_read_write_arrays_assign  go to state 49
    statement_sequence_prime       go to state 50
    raise_statement                go to state 51
    loop_part                      go to state 52
    loop_start                     go to state 53
    case_statement                 go to state 54
    case_start                     go to state 55
    if_statement                   go to state 56
    if_start                       go to state 57


state 221

   82 else_if_section: else_if_stmt else_if_section .

    $default  reduce using rule 82 (else_if_section)


state 222

   84 else_if_stmt: else_if_start initial . THEN sequence_of_statements

    THEN  shift, and go to state 228


state 223

   26 types: TYPE ID IS ARRAY '(' constant DOTDOT constant ')' . OF type_name

    OF  shift, and go to state 229


state 224

   74 when_expression_sequence: when_expression '|' when_expression_sequence .

    $default  reduce using rule 74 (when_expression_sequence)


state 225

  110 optional_array: '(' expression ')' .

    $default  reduce using rule 110 (optional_array)


state 226

   78 if_statement: if_start initial THEN sequence_of_statements optional_else_if optional_else ENDIF .

    $default  reduce using rule 78 (if_statement)


state 227

   86 optional_else: else_start sequence_of_statements .

    $default  reduce using rule 86 (optional_else)


state 228

   84 else_if_stmt: else_if_start initial THEN . sequence_of_statements

    ID        shift, and go to state 42
    RAISE     shift, and go to state 43
    NULLWORD  shift, and go to state 44
    LOOP      shift, and go to state 45
    IF        shift, and go to state 46
    CASE      shift, and go to state 47

    $default  reduce using rule 40 (sequence_of_statements)

    sequence_of_statements         go to state 230
    proc_read_write_arrays_assign  go to state 49
    statement_sequence_prime       go to state 50
    raise_statement                go to state 51
    loop_part                      go to state 52
    loop_start                     go to state 53
    case_statement                 go to state 54
    case_start                     go to state 55
    if_statement                   go to state 56
    if_start                       go to state 57


state 229

   26 types: TYPE ID IS ARRAY '(' constant DOTDOT constant ')' OF . type_name

    ID  shift, and go to state 38

    type_name  go to state 231


state 230

   84 else_if_stmt: else_if_start initial THEN sequence_of_statements .

    $default  reduce using rule 84 (else_if_stmt)


state 231

   26 types: TYPE ID IS ARRAY '(' constant DOTDOT constant ')' OF type_name .

    $default  reduce using rule 26 (types)
